// Generated by ts-to-zod
import { z } from 'zod';

export const getSpellCheckDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      language_code: z.string().optional(),
      text: z.string().optional(),
    })
    .optional(),
});

export const getSpellCheckResponseSchema = z.record(z.unknown());

export const getSpellCheckErrorSchema = z.unknown();

export const getProfanityDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      text: z.string().optional(),
    })
    .optional(),
});

export const getProfanityResponseSchema = z.record(z.unknown());

export const getProfanityErrorSchema = z.unknown();

export const getNsfwDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      url: z.string().optional(),
    })
    .optional(),
});

export const getNsfwResponseSchema = z.unknown();

export const getNsfwErrorSchema = z.unknown();

export const getValidateEmailDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      email: z.string().optional(),
    })
    .optional(),
});

export const getValidateEmailResponseSchema = z.record(z.unknown());

export const getValidateEmailErrorSchema = z.unknown();

export const postSpamcheckDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postSpamcheckResponseSchema = z.record(z.unknown());

export const postSpamcheckErrorSchema = z.unknown();

export const getSearchDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      ai_overview: z.boolean().optional(),
      query: z.string().optional(),
      safe_search: z.string().optional(),
      spell_check: z.boolean().optional(),
    })
    .optional(),
});

export const getSearchResponseSchema = z.record(z.unknown());

export const getSearchErrorSchema = z.unknown();

export const getSearchSuggestDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      query: z.string().optional(),
    })
    .optional(),
});

export const getSearchSuggestResponseSchema = z.record(z.unknown());

export const getSearchSuggestErrorSchema = z.unknown();

export const getDnsDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      domain: z.string().optional(),
      type: z.string().optional(),
    })
    .optional(),
});

export const getDnsResponseSchema = z.record(z.unknown());

export const getDnsErrorSchema = z.unknown();

export const postHtmlToAnyDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postHtmlToAnyResponseSchema = z.unknown();

export const postHtmlToAnyErrorSchema = z.unknown();

export const postScrapeDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postScrapeResponseSchema = z.unknown();

export const postScrapeErrorSchema = z.unknown();

export const postAiScrapeDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postAiScrapeResponseSchema = z.record(z.unknown());

export const postAiScrapeErrorSchema = z.unknown();

export const postStoreKvDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postStoreKvResponseSchema = z.record(z.unknown());

export const postStoreKvErrorSchema = z.unknown();

export const getStoreKv39Jd883DataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const getStoreKv39Jd883ResponseSchema = z.record(z.unknown());

export const getStoreKv39Jd883ErrorSchema = z.unknown();

export const deleteFileHelloDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const deleteFileHelloResponseSchema = z.record(z.unknown());

export const deleteFileHelloErrorSchema = z.unknown();

export const postStoreFileResponseSchema = z.unknown();

export const postStoreFileErrorSchema = z.unknown();

export const getStoreFileByKeyDataSchema = z.object({
  path: z.object({
    key: z.string(),
  }),
});

export const getStoreFileByKeyResponseSchema = z.unknown();

export const getStoreFileByKeyErrorSchema = z.unknown();

export const postObjectDetectionDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postObjectDetectionResponseSchema = z.record(z.unknown());

export const postObjectDetectionErrorSchema = z.unknown();

export const postDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postResponseSchema = z.record(z.unknown());

export const postErrorSchema = z.unknown();

export const getGeoCityDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      country_code: z.string().optional(),
    })
    .optional(),
});

export const getGeoCityResponseSchema = z.unknown();

export const getGeoCityErrorSchema = z.unknown();

export const getGeoCountryDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      country_code: z.string().optional(),
    })
    .optional(),
});

export const getGeoCountryResponseSchema = z.unknown();

export const getGeoCountryErrorSchema = z.unknown();

export const getGeoStateDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      country_code: z.string().optional(),
    })
    .optional(),
});

export const getGeoStateResponseSchema = z.unknown();

export const getGeoStateErrorSchema = z.unknown();

export const getGeoDistanceDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      lat1: z.number().optional(),
      lat2: z.number().optional(),
      lng1: z.number().optional(),
      lng2: z.number().optional(),
    })
    .optional(),
});

export const getGeoDistanceResponseSchema = z.record(z.unknown());

export const getGeoDistanceErrorSchema = z.unknown();

export const getGeoTimezoneDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      country_code: z.string().optional(),
    })
    .optional(),
});

export const getGeoTimezoneResponseSchema = z.record(z.unknown());

export const getGeoTimezoneErrorSchema = z.unknown();

export const getGeoGeohashDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      lat: z.number().optional(),
      lng: z.number().optional(),
    })
    .optional(),
});

export const getGeoGeohashResponseSchema = z.record(z.unknown());

export const getGeoGeohashErrorSchema = z.unknown();

export const getGeoGeohashDecodeS1Jsf8YpfDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const getGeoGeohashDecodeS1Jsf8YpfResponseSchema = z.record(z.unknown());

export const getGeoGeohashDecodeS1Jsf8YpfErrorSchema = z.unknown();

export const getGeoSearchDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      search_value: z.string().optional(),
    })
    .optional(),
});

export const getGeoSearchResponseSchema = z.unknown();

export const getGeoSearchErrorSchema = z.unknown();

export const getGeoGeocodeDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      search_value: z.string().optional(),
    })
    .optional(),
});

export const getGeoGeocodeResponseSchema = z.unknown();

export const getGeoGeocodeErrorSchema = z.unknown();

export const postTranscribeDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postTranscribeResponseSchema = z.record(z.unknown());

export const postTranscribeErrorSchema = z.unknown();

export const postTtsDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postTtsResponseSchema = z.record(z.unknown());

export const postTtsErrorSchema = z.unknown();

export const getTtsDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const getTtsResponseSchema = z.record(z.unknown());

export const getTtsErrorSchema = z.unknown();

export const postPromptEngineDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postPromptEngineResponseSchema = z.record(z.unknown());

export const postPromptEngineErrorSchema = z.unknown();

export const getPromptEngineDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      limit: z.number().optional(),
      page: z.number().optional(),
    })
    .optional(),
});

export const getPromptEngineResponseSchema = z.record(z.unknown());

export const getPromptEngineErrorSchema = z.unknown();

export const postPromptEngineB295D777089248E1A5F6A9Ae91E9D28ADataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postPromptEngineB295D777089248E1A5F6A9Ae91E9D28AResponseSchema = z.unknown();

export const postPromptEngineB295D777089248E1A5F6A9Ae91E9D28AErrorSchema = z.unknown();

export const deletePromptEngineDc578C696Eb54C5B82Ab9F74077Cfdd5DataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const deletePromptEngineDc578C696Eb54C5B82Ab9F74077Cfdd5ResponseSchema = z.record(z.unknown());

export const deletePromptEngineDc578C696Eb54C5B82Ab9F74077Cfdd5ErrorSchema = z.unknown();

export const postRunDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postRunResponseSchema = z.record(z.unknown());

export const postRunErrorSchema = z.unknown();

export const getDc578C696Eb54C5B82Ab9F74077Cfdd5DataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const getDc578C696Eb54C5B82Ab9F74077Cfdd5ResponseSchema = z.record(z.unknown());

export const getDc578C696Eb54C5B82Ab9F74077Cfdd5ErrorSchema = z.unknown();

export const postApiV1PromptEngineStreamingDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
      'x-jigsaw-no-request-log': z.boolean().optional(),
    })
    .optional(),
});

export const postApiV1PromptEngineStreamingResponseSchema = z.unknown();

export const postApiV1PromptEngineStreamingErrorSchema = z.unknown();

export const postSummaryDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      text: z.string().optional(),
    })
    .optional(),
});

export const postSummaryResponseSchema = z.record(z.unknown());

export const postSummaryErrorSchema = z.unknown();

export const postSentimentDataSchema = z.object({
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
  query: z
    .object({
      text: z.string().optional(),
    })
    .optional(),
});

export const postSentimentResponseSchema = z.record(z.unknown());

export const postSentimentErrorSchema = z.unknown();

export const postTranslateDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postTranslateResponseSchema = z.record(z.unknown());

export const postTranslateErrorSchema = z.unknown();

export const postSqlDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postSqlResponseSchema = z.record(z.unknown());

export const postSqlErrorSchema = z.unknown();

export const postImageGenerationDataSchema = z.object({
  body: z.record(z.unknown()).optional(),
  headers: z
    .object({
      'x-api-key': z.string().optional(),
    })
    .optional(),
});

export const postImageGenerationResponseSchema = z.unknown();

export const postImageGenerationErrorSchema = z.unknown();
